// Code generated by MockGen. DO NOT EDIT.
// Source: supply.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSupply is a mock of Supply interface
type MockSupply struct {
	ctrl     *gomock.Controller
	recorder *MockSupplyMockRecorder
}

// MockSupplyMockRecorder is the mock recorder for MockSupply
type MockSupplyMockRecorder struct {
	mock *MockSupply
}

// NewMockSupply creates a new mock instance
func NewMockSupply(ctrl *gomock.Controller) *MockSupply {
	mock := &MockSupply{ctrl: ctrl}
	mock.recorder = &MockSupplyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSupply) EXPECT() *MockSupplyMockRecorder {
	return m.recorder
}

// GetCirculatingSupply mocks base method
func (m *MockSupply) GetCirculatingSupply() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCirculatingSupply")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCirculatingSupply indicates an expected call of GetCirculatingSupply
func (mr *MockSupplyMockRecorder) GetCirculatingSupply() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCirculatingSupply", reflect.TypeOf((*MockSupply)(nil).GetCirculatingSupply))
}
