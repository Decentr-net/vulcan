{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Vulcan is an users' wallets creator.",
    "title": "Vulcan",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/confirm": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vulcan"
        ],
        "summary": "Confirms registration and sends stakes.",
        "operationId": "Confirm",
        "parameters": [
          {
            "name": "code",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfirmRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "stakes were sent"
          },
          "404": {
            "description": "no one register request was found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "request is already confirmed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/dloan": {
      "get": {
        "description": "List dLoan requests",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vulcan"
        ],
        "operationId": "ListDLoans",
        "parameters": [
          {
            "maximum": 50,
            "minimum": 1,
            "default": 50,
            "description": "number of loans to take",
            "name": "take",
            "in": "query"
          },
          {
            "default": 0,
            "description": "number of loans to skip",
            "name": "skip",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DLoan"
            }
          },
          "500": {
            "description": "internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates dLoan request",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vulcan"
        ],
        "operationId": "CreateDLoan",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DLoanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "dloan created.",
            "schema": {
              "$ref": "#/definitions/EmptyResponse"
            }
          },
          "400": {
            "description": "bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/hesoyam/{address}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vulcan"
        ],
        "summary": "Like a game cheat gives you test stakes. Works only for testnet.",
        "operationId": "GiveStakes",
        "parameters": [
          {
            "type": "string",
            "name": "address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "stakes were sent"
          },
          "500": {
            "description": "internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/referral/code/{address}": {
      "get": {
        "description": "Returns a referral code of the given account",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vulcan"
        ],
        "operationId": "GetOwnReferralCode",
        "parameters": [
          {
            "type": "string",
            "name": "address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReferralCodeResponse"
            }
          },
          "404": {
            "description": "referral code not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/referral/code/{address}/registration": {
      "get": {
        "description": "Returns a referral code the account was registered with",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vulcan"
        ],
        "operationId": "GetRegistrationReferralCode",
        "parameters": [
          {
            "type": "string",
            "name": "address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReferralCodeResponse"
            }
          },
          "404": {
            "description": "referral code not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/referral/config": {
      "get": {
        "description": "Returns referral params",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vulcan"
        ],
        "operationId": "RetReferralParams",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Config"
            }
          },
          "500": {
            "description": "internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/referral/track/install/{address}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vulcan"
        ],
        "summary": "Tracks the Decentr browser installation.",
        "operationId": "TrackBrowserInstallation",
        "parameters": [
          {
            "type": "string",
            "name": "address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "referral marked with installed status"
          },
          "404": {
            "description": "referral tracking not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "referral is already marked as installed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/referral/track/stats/{address}": {
      "get": {
        "description": "Returns a referral tracking stats of the given account",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vulcan"
        ],
        "operationId": "GetReferralTrackingStats",
        "parameters": [
          {
            "type": "string",
            "name": "address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReferralTrackingStatsResponse"
            }
          },
          "404": {
            "description": "address not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vulcan"
        ],
        "summary": "Sends confirmation link via email. After confirmation stakes will be sent.",
        "operationId": "Register",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "confirmation link was sent.",
            "schema": {
              "$ref": "#/definitions/EmptyResponse"
            }
          },
          "400": {
            "description": "bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "wallet has already created for this email.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "referral code not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "minute didn't pass after last try to send email",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/register/stats": {
      "get": {
        "description": "Confirmed registrations stats",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vulcan"
        ],
        "operationId": "RegisterStats",
        "responses": {
          "200": {
            "description": "confirmation link was sent.",
            "schema": {
              "$ref": "#/definitions/RegisterStats"
            }
          },
          "500": {
            "description": "internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/supply": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vulcan"
        ],
        "summary": "Returns sum of erc20 and native supply supply.",
        "operationId": "Supply",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          },
          "500": {
            "description": "internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Bonus": {
      "type": "object",
      "title": "Bonus ...",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Count"
        },
        "reward": {
          "$ref": "#/definitions/Int"
        }
      },
      "x-go-package": "github.com/Decentr-net/vulcan/internal/referral"
    },
    "Coin": {
      "description": "NOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto.",
      "type": "object",
      "title": "Coin defines a token with a denomination and an amount.",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Int"
        },
        "denom": {
          "type": "string",
          "x-go-name": "Denom"
        }
      },
      "x-go-package": "github.com/cosmos/cosmos-sdk/types"
    },
    "Config": {
      "type": "object",
      "title": "Config ...",
      "properties": {
        "receiverReward": {
          "$ref": "#/definitions/Int"
        },
        "senderBonus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Bonus"
          },
          "x-go-name": "SenderBonuses"
        },
        "senderRewardLevels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RewardLevel"
          },
          "x-go-name": "SenderRewardLevels"
        },
        "thresholdDays": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ThresholdDays"
        },
        "thresholdPDV": {
          "$ref": "#/definitions/Dec"
        }
      },
      "x-go-package": "github.com/Decentr-net/vulcan/internal/referral"
    },
    "ConfirmRequest": {
      "type": "object",
      "title": "ConfirmRequest ...",
      "properties": {
        "code": {
          "type": "string",
          "x-go-name": "Code"
        },
        "email": {
          "type": "string",
          "x-go-name": "Email"
        }
      },
      "x-go-package": "github.com/Decentr-net/vulcan/internal/server"
    },
    "DLoan": {
      "type": "object",
      "title": "DLoan ...",
      "properties": {
        "createdAt": {
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "firstName": {
          "type": "string",
          "x-go-name": "FirstName"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "lastName": {
          "type": "string",
          "x-go-name": "LastName"
        },
        "pdvRate": {
          "type": "number",
          "format": "double",
          "x-go-name": "PDV"
        },
        "walletAddress": {
          "type": "string",
          "x-go-name": "Address"
        }
      },
      "x-go-package": "github.com/Decentr-net/vulcan/internal/server"
    },
    "DLoanRequest": {
      "type": "object",
      "title": "DLoanRequest ...",
      "properties": {
        "firstName": {
          "type": "string",
          "x-go-name": "FirstName"
        },
        "lastName": {
          "type": "string",
          "x-go-name": "LastName"
        },
        "pdvRate": {
          "type": "number",
          "format": "double",
          "x-go-name": "PDV"
        },
        "walletAddress": {
          "type": "string",
          "x-go-name": "Address"
        }
      },
      "x-go-package": "github.com/Decentr-net/vulcan/internal/server"
    },
    "Dec": {
      "description": "NOTE: never use new(Dec) or else we will panic unmarshalling into the\nnil embedded big.Int",
      "type": "object",
      "x-go-package": "github.com/cosmos/cosmos-sdk/types"
    },
    "EmptyResponse": {
      "type": "object",
      "title": "EmptyResponse ...",
      "x-go-package": "github.com/Decentr-net/vulcan/internal/server"
    },
    "Error": {
      "type": "object",
      "title": "Error ...",
      "properties": {
        "error": {
          "type": "string",
          "x-go-name": "Error"
        }
      },
      "x-go-package": "github.com/Decentr-net/go-api"
    },
    "Int": {
      "description": "Int wraps big.Int with a 257 bit range bound\nChecks overflow, underflow and division by zero\nExists in range from -(2^256 - 1) to 2^256 - 1",
      "type": "object",
      "x-go-package": "github.com/cosmos/cosmos-sdk/types"
    },
    "ReferralCodeResponse": {
      "type": "object",
      "title": "ReferralCodeResponse ...",
      "properties": {
        "code": {
          "type": "string",
          "x-go-name": "Code"
        }
      },
      "x-go-package": "github.com/Decentr-net/vulcan/internal/server"
    },
    "ReferralTrackingStatsItem": {
      "type": "object",
      "title": "ReferralTrackingStatsItem ...",
      "properties": {
        "confirmed": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Confirmed"
        },
        "installed": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Installed"
        },
        "registered": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Registered"
        },
        "reward": {
          "$ref": "#/definitions/Coin"
        }
      },
      "x-go-package": "github.com/Decentr-net/vulcan/internal/server"
    },
    "ReferralTrackingStatsResponse": {
      "type": "object",
      "title": "ReferralTrackingStatsResponse ...",
      "properties": {
        "last30Days": {
          "$ref": "#/definitions/ReferralTrackingStatsItem"
        },
        "total": {
          "$ref": "#/definitions/ReferralTrackingStatsItem"
        }
      },
      "x-go-package": "github.com/Decentr-net/vulcan/internal/server"
    },
    "RegisterRequest": {
      "type": "object",
      "title": "RegisterRequest ...",
      "required": [
        "email"
      ],
      "properties": {
        "address": {
          "type": "string",
          "x-go-name": "Address"
        },
        "email": {
          "type": "string",
          "format": "email",
          "x-go-name": "Email"
        },
        "recaptchaResponse": {
          "type": "string",
          "x-go-name": "RecaptchaResponse"
        },
        "referralCode": {
          "type": "string",
          "x-go-name": "ReferralCode"
        }
      },
      "x-go-package": "github.com/Decentr-net/vulcan/internal/server"
    },
    "RegisterStats": {
      "type": "object",
      "title": "RegisterStats ...",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatsItem"
          },
          "x-go-name": "Stats"
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Total"
        }
      },
      "x-go-package": "github.com/Decentr-net/vulcan/internal/server"
    },
    "RewardLevel": {
      "type": "object",
      "title": "RewardLevel ...",
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "From"
        },
        "reward": {
          "$ref": "#/definitions/Int"
        },
        "to": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "To"
        }
      },
      "x-go-package": "github.com/Decentr-net/vulcan/internal/referral"
    },
    "StatsItem": {
      "description": "Date is RFC3999 date, value is number of new accounts.",
      "type": "object",
      "title": "StatsItem ...",
      "properties": {
        "date": {
          "type": "string",
          "x-go-name": "Date"
        },
        "value": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "github.com/Decentr-net/vulcan/internal/server"
    }
  }
}